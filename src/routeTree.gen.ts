/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'
import { Route as errors403RouteImport } from './routes/(errors)/403'
import { Route as errors401RouteImport } from './routes/(errors)/401'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as AuthenticatedUsersIndexRouteImport } from './routes/_authenticated/users/index'
import { Route as AuthenticatedSubmissionIndexRouteImport } from './routes/_authenticated/submission/index'
import { Route as AuthenticatedRolesIndexRouteImport } from './routes/_authenticated/roles/index'
import { Route as AuthenticatedDashboardIndexRouteImport } from './routes/_authenticated/dashboard/index'
import { Route as AuthenticatedAssignmentIndexRouteImport } from './routes/_authenticated/assignment/index'
import { Route as AuthenticatedRolesCreateIndexRouteImport } from './routes/_authenticated/roles/create/index'
import { Route as AuthenticatedAssignmentTestBuilderIndexRouteImport } from './routes/_authenticated/assignment/test-builder/index'
import { Route as AuthenticatedAssignmentCompilerIndexRouteImport } from './routes/_authenticated/assignment/compiler/index'
import { Route as AuthenticatedRolesRoleIdEditIndexRouteImport } from './routes/_authenticated/roles/$roleId/edit/index'

const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const errors403Route = errors403RouteImport.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const errors401Route = errors401RouteImport.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRouteImport,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedUsersIndexRoute = AuthenticatedUsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedSubmissionIndexRoute =
  AuthenticatedSubmissionIndexRouteImport.update({
    id: '/submission/',
    path: '/submission/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedRolesIndexRoute = AuthenticatedRolesIndexRouteImport.update({
  id: '/roles/',
  path: '/roles/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedDashboardIndexRoute =
  AuthenticatedDashboardIndexRouteImport.update({
    id: '/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAssignmentIndexRoute =
  AuthenticatedAssignmentIndexRouteImport.update({
    id: '/assignment/',
    path: '/assignment/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedRolesCreateIndexRoute =
  AuthenticatedRolesCreateIndexRouteImport.update({
    id: '/roles/create/',
    path: '/roles/create/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAssignmentTestBuilderIndexRoute =
  AuthenticatedAssignmentTestBuilderIndexRouteImport.update({
    id: '/assignment/test-builder/',
    path: '/assignment/test-builder/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAssignmentCompilerIndexRoute =
  AuthenticatedAssignmentCompilerIndexRouteImport.update({
    id: '/assignment/compiler/',
    path: '/assignment/compiler/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedRolesRoleIdEditIndexRoute =
  AuthenticatedRolesRoleIdEditIndexRouteImport.update({
    id: '/roles/$roleId/edit/',
    path: '/roles/$roleId/edit/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/assignment': typeof AuthenticatedAssignmentIndexRoute
  '/dashboard': typeof AuthenticatedDashboardIndexRoute
  '/roles': typeof AuthenticatedRolesIndexRoute
  '/submission': typeof AuthenticatedSubmissionIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
  '/assignment/compiler': typeof AuthenticatedAssignmentCompilerIndexRoute
  '/assignment/test-builder': typeof AuthenticatedAssignmentTestBuilderIndexRoute
  '/roles/create': typeof AuthenticatedRolesCreateIndexRoute
  '/roles/$roleId/edit': typeof AuthenticatedRolesRoleIdEditIndexRoute
}
export interface FileRoutesByTo {
  '/login': typeof authLoginRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/assignment': typeof AuthenticatedAssignmentIndexRoute
  '/dashboard': typeof AuthenticatedDashboardIndexRoute
  '/roles': typeof AuthenticatedRolesIndexRoute
  '/submission': typeof AuthenticatedSubmissionIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
  '/assignment/compiler': typeof AuthenticatedAssignmentCompilerIndexRoute
  '/assignment/test-builder': typeof AuthenticatedAssignmentTestBuilderIndexRoute
  '/roles/create': typeof AuthenticatedRolesCreateIndexRoute
  '/roles/$roleId/edit': typeof AuthenticatedRolesRoleIdEditIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/assignment/': typeof AuthenticatedAssignmentIndexRoute
  '/_authenticated/dashboard/': typeof AuthenticatedDashboardIndexRoute
  '/_authenticated/roles/': typeof AuthenticatedRolesIndexRoute
  '/_authenticated/submission/': typeof AuthenticatedSubmissionIndexRoute
  '/_authenticated/users/': typeof AuthenticatedUsersIndexRoute
  '/_authenticated/assignment/compiler/': typeof AuthenticatedAssignmentCompilerIndexRoute
  '/_authenticated/assignment/test-builder/': typeof AuthenticatedAssignmentTestBuilderIndexRoute
  '/_authenticated/roles/create/': typeof AuthenticatedRolesCreateIndexRoute
  '/_authenticated/roles/$roleId/edit/': typeof AuthenticatedRolesRoleIdEditIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/assignment'
    | '/dashboard'
    | '/roles'
    | '/submission'
    | '/users'
    | '/assignment/compiler'
    | '/assignment/test-builder'
    | '/roles/create'
    | '/roles/$roleId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/assignment'
    | '/dashboard'
    | '/roles'
    | '/submission'
    | '/users'
    | '/assignment/compiler'
    | '/assignment/test-builder'
    | '/roles/create'
    | '/roles/$roleId/edit'
  id:
    | '__root__'
    | '/_authenticated'
    | '/(auth)/login'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/'
    | '/_authenticated/assignment/'
    | '/_authenticated/dashboard/'
    | '/_authenticated/roles/'
    | '/_authenticated/submission/'
    | '/_authenticated/users/'
    | '/_authenticated/assignment/compiler/'
    | '/_authenticated/assignment/test-builder/'
    | '/_authenticated/roles/create/'
    | '/_authenticated/roles/$roleId/edit/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  authLoginRoute: typeof authLoginRoute
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/users/': {
      id: '/_authenticated/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/submission/': {
      id: '/_authenticated/submission/'
      path: '/submission'
      fullPath: '/submission'
      preLoaderRoute: typeof AuthenticatedSubmissionIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/roles/': {
      id: '/_authenticated/roles/'
      path: '/roles'
      fullPath: '/roles'
      preLoaderRoute: typeof AuthenticatedRolesIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/dashboard/': {
      id: '/_authenticated/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/assignment/': {
      id: '/_authenticated/assignment/'
      path: '/assignment'
      fullPath: '/assignment'
      preLoaderRoute: typeof AuthenticatedAssignmentIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/roles/create/': {
      id: '/_authenticated/roles/create/'
      path: '/roles/create'
      fullPath: '/roles/create'
      preLoaderRoute: typeof AuthenticatedRolesCreateIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/assignment/test-builder/': {
      id: '/_authenticated/assignment/test-builder/'
      path: '/assignment/test-builder'
      fullPath: '/assignment/test-builder'
      preLoaderRoute: typeof AuthenticatedAssignmentTestBuilderIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/assignment/compiler/': {
      id: '/_authenticated/assignment/compiler/'
      path: '/assignment/compiler'
      fullPath: '/assignment/compiler'
      preLoaderRoute: typeof AuthenticatedAssignmentCompilerIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/roles/$roleId/edit/': {
      id: '/_authenticated/roles/$roleId/edit/'
      path: '/roles/$roleId/edit'
      fullPath: '/roles/$roleId/edit'
      preLoaderRoute: typeof AuthenticatedRolesRoleIdEditIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}

interface AuthenticatedRouteRouteChildren {
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedAssignmentIndexRoute: typeof AuthenticatedAssignmentIndexRoute
  AuthenticatedDashboardIndexRoute: typeof AuthenticatedDashboardIndexRoute
  AuthenticatedRolesIndexRoute: typeof AuthenticatedRolesIndexRoute
  AuthenticatedSubmissionIndexRoute: typeof AuthenticatedSubmissionIndexRoute
  AuthenticatedUsersIndexRoute: typeof AuthenticatedUsersIndexRoute
  AuthenticatedAssignmentCompilerIndexRoute: typeof AuthenticatedAssignmentCompilerIndexRoute
  AuthenticatedAssignmentTestBuilderIndexRoute: typeof AuthenticatedAssignmentTestBuilderIndexRoute
  AuthenticatedRolesCreateIndexRoute: typeof AuthenticatedRolesCreateIndexRoute
  AuthenticatedRolesRoleIdEditIndexRoute: typeof AuthenticatedRolesRoleIdEditIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedAssignmentIndexRoute: AuthenticatedAssignmentIndexRoute,
  AuthenticatedDashboardIndexRoute: AuthenticatedDashboardIndexRoute,
  AuthenticatedRolesIndexRoute: AuthenticatedRolesIndexRoute,
  AuthenticatedSubmissionIndexRoute: AuthenticatedSubmissionIndexRoute,
  AuthenticatedUsersIndexRoute: AuthenticatedUsersIndexRoute,
  AuthenticatedAssignmentCompilerIndexRoute:
    AuthenticatedAssignmentCompilerIndexRoute,
  AuthenticatedAssignmentTestBuilderIndexRoute:
    AuthenticatedAssignmentTestBuilderIndexRoute,
  AuthenticatedRolesCreateIndexRoute: AuthenticatedRolesCreateIndexRoute,
  AuthenticatedRolesRoleIdEditIndexRoute:
    AuthenticatedRolesRoleIdEditIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  authLoginRoute: authLoginRoute,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
